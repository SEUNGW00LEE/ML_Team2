theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 컬러 팔레트 설정
# 새로운 색상 팔레트 설정
colors <- c("#69b3a2", "#404080", "#d55e00", "#cc79a7", "#f0e442", "#56b4e9",
"#e69f00", "#0072b2", "#009e73", "#000000", "#e51e10")
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd", "#fdcdac")
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd", "#fdcdac")
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd", "#fdcdac")
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
warning()
warning()
warnings()
p3 <- ggplot(data, aes(x=색상)) + geom_bar() + theme_minimal() + labs(title="색상별 빈도", x="색상", y="빈도수")
p4 <- ggplot(data, aes(x=변속기)) + geom_bar() + theme_minimal() + labs(title="변속기별 빈도", x="변속기", y="빈도수")
p5 <- ggplot(data, aes(x=연료)) + geom_bar() + theme_minimal() + labs(title="연료별 빈도", x="연료", y="빈도수")
p3
p4
p5
write.csv(car_data, file = "donotlabeling.csv", row.names = FALSE)
data <- read.csv("donotlabeling.csv")
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd", "#fdcdac")
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
p3 <- ggplot(data, aes(x=색상)) + geom_bar() + theme_minimal() + labs(title="색상별 빈도", x="색상", y="빈도수")
p4 <- ggplot(data, aes(x=변속기)) + geom_bar() + theme_minimal() + labs(title="변속기별 빈도", x="변속기", y="빈도수")
p5 <- ggplot(data, aes(x=연료)) + geom_bar() + theme_minimal() + labs(title="연료별 빈도", x="연료", y="빈도수")
p3
p4
p5
# 필요한 패키지를 불러옵니다.
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(gridExtra)
library(showtext)
# showtext를 사용하여 한글 폰트 문제를 해결합니다.
showtext_auto(enable = TRUE)
font_add_google("Nanum Gothic", "nanumgothic")
data <- read.csv("donotlabeling.csv")
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd", "#fdcdac")
View(data)
# install.packages('dplyr')
# install.packages('tidyr')
install.packages('gridExtra')
library(dplyr)
library(tidyr)
library(stringr)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(gridExtra)
# 필요한 패키지를 설치하고 불러옵니다.
install.packages("showtext")
library(showtext)
# showtext를 사용하여 폰트 시스템을 초기화합니다.
showtext_auto(enable = TRUE)
# 사용할 한글 폰트를 등록합니다. 여기서는 'NanumGothic'을 사용합니다.
font_add_google("Nanum Gothic", "nanumgothic")
# 그래픽 장치를 초기화하고 한글 폰트를 사용하도록 설정합니다.
showtext_begin()
rm(list=ls())
setwd("~/Desktop/ML_Team2/")
car_data <- read.csv("car_bobe (2).csv", stringsAsFactors = FALSE)
View(car_data)
# '가격' 컬럼에 NA값이 있는 행을 제거합니다.
car_data <- car_data[car_data$가격 != "", ]
car_data <- car_data %>%
filter(!is.na(가격))
car_data <- car_data %>%
filter(!str_detect(가격, "^[^0-9]"))
View(car_data)
#가격 -> numeric 형으로
View(car_data)
car_data$가격 <- gsub('만원', '', car_data$가격)
car_data$가격 <- gsub(',', '', car_data$가격)
car_data$가격 <- as.numeric(car_data$가격)
#연식 -> YYYY.MM 로 통일
car_data <- car_data %>%
mutate(연식 = gsub("^\\s+|\\s+$", "", substr(연식, 1, 8)))
#배기량 -> numeric 형으로
car_data <- car_data %>%
mutate(배기량 = as.integer(gsub(" cc.*$", "", gsub(",", "", 배기량))))
car_data <- car_data %>%
mutate(주행거리 = gsub(" km", "", 주행거리), # Remove ' km'
주행거리 = gsub(",", "", 주행거리), # Remove commas
주행거리 = as.integer(주행거리)) # Convert to integer
car_data$색상 <- sub("색.*", "", car_data$색상)
color_groups <- list(
"흰" = c("흰", "진주", "진주투톤"),
"회" = c("회", "진회", "은"),
"파란" = c("파란", "청", "청옥", "하늘", "남", "은하늘", "진청"),
"검정" = c("검정", "검정투톤"),
"노란" = c("베이지", "노란", "금", "연금"),
"자주" = c("자주","보라"))
# 그룹화된 색상으로 변경
for (group in names(color_groups)) {
car_data$색상[car_data$색상 %in% color_groups[[group]]] <- group
}
write.csv(car_data, file = "donotlabeling.csv", row.names = FALSE)
# showtext를 사용하여 한글 폰트 문제를 해결합니다.
showtext_auto(enable = TRUE)
font_add_google("Nanum Gothic", "nanumgothic")
data <- read.csv("donotlabeling.csv")
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd", "#fdcdac")
View(data)
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# install.packages('dplyr')
# install.packages('tidyr')
# install.packages('gridExtra')
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(gridExtra)
# 필요한 패키지를 설치하고 불러옵니다.
# install.packages("showtext")
library(showtext)
# showtext를 사용하여 폰트 시스템을 초기화합니다.
showtext_auto(enable = TRUE)
# 사용할 한글 폰트를 등록합니다. 여기서는 'NanumGothic'을 사용합니다.
font_add_google("Nanum Gothic", "nanumgothic")
# 그래픽 장치를 초기화하고 한글 폰트를 사용하도록 설정합니다.
showtext_begin()
rm(list=ls())
setwd("~/Desktop/ML_Team2/")
car_data <- read.csv("car_bobe (2).csv", stringsAsFactors = FALSE)
View(car_data)
# '가격' 컬럼에 NA값이 있는 행을 제거합니다.
car_data <- car_data[car_data$가격 != "", ]
car_data <- car_data %>%
filter(!is.na(가격))
car_data <- car_data %>%
filter(!str_detect(가격, "^[^0-9]"))
View(car_data)
#가격 -> numeric 형으로
View(car_data)
car_data$가격 <- gsub('만원', '', car_data$가격)
car_data$가격 <- gsub(',', '', car_data$가격)
car_data$가격 <- as.numeric(car_data$가격)
#연식 -> YYYY.MM 로 통일
car_data <- car_data %>%
mutate(연식 = gsub("^\\s+|\\s+$", "", substr(연식, 1, 8)))
#배기량 -> numeric 형으로
car_data <- car_data %>%
mutate(배기량 = as.integer(gsub(" cc.*$", "", gsub(",", "", 배기량))))
car_data <- car_data %>%
mutate(주행거리 = gsub(" km", "", 주행거리), # Remove ' km'
주행거리 = gsub(",", "", 주행거리), # Remove commas
주행거리 = as.integer(주행거리)) # Convert to integer
car_data$색상 <- sub("색.*", "", car_data$색상)
color_groups <- list(
"흰" = c("흰", "진주", "진주투톤"),
"회" = c("회", "진회", "은"),
"파란" = c("파란", "청", "청옥", "하늘", "남", "은하늘", "진청"),
"검정" = c("검정", "검정투톤"),
"노란" = c("베이지", "노란", "금", "연금"),
"자주" = c("자주","보라"))
# 그룹화된 색상으로 변경
for (group in names(color_groups)) {
car_data$색상[car_data$색상 %in% color_groups[[group]]] <- group
}
# '차종' 컬럼을 첫 공백을 기준으로 분할하여 '브랜드'와 '차종' 컬럼으로 나누기
split_names <- strsplit(as.character(car_data$차종), " ", fixed = TRUE)
car_data$브랜드 <- sapply(split_names, function(x) x[1])
car_data$차종 <- sapply(split_names, function(x) paste(x[-1], collapse = " "))
# 9번째 컬럼부터 끝(옵션 컬럼들)까지의 NA 값을 0으로 바꾸기
car_data[, 9:ncol(car_data)][is.na(car_data[, 9:ncol(car_data)])] <- 0
car_data <- car_data[, c(ncol(car_data), 1:(ncol(car_data)-1))]
car_data$전손유무 <- 0
car_data$침수유무 <- 0
car_data$소유자.이전.횟수[car_data$소유자.이전.횟수 == ""] <- 0
car_data <- car_data %>%
mutate(`소유자.이전.횟수` = as.integer(gsub("회", "", `소유자.이전.횟수`)))
write.csv(car_data, file = "donotlabeling.csv", row.names = FALSE)
# showtext를 사용하여 한글 폰트 문제를 해결합니다.
showtext_auto(enable = TRUE)
font_add_google("Nanum Gothic", "nanumgothic")
data <- read.csv("donotlabeling.csv")
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd", "#fdcdac")
View(data)
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
p3 <- ggplot(data, aes(x=색상)) + geom_bar() + theme_minimal() + labs(title="색상별 빈도", x="색상", y="빈도수")
p4 <- ggplot(data, aes(x=변속기)) + geom_bar() + theme_minimal() + labs(title="변속기별 빈도", x="변속기", y="빈도수")
p5 <- ggplot(data, aes(x=연료)) + geom_bar() + theme_minimal() + labs(title="연료별 빈도", x="연료", y="빈도수")
p3
p4
p5
p3 <- ggplot(data, aes(x=변속기, fill=변속기)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="변속기별 빈도", x="변속기", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p3
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
View(data)
unique(colors)
unique(data$색상)
nunique(data$색상)
unique(data$색상)
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd",
"#fdcdac", "#1f78b4", "#33a02c")
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
p3 <- ggplot(data, aes(x=변속기, fill=변속기)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="변속기별 빈도", x="변속기", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p3
p4 <- ggplot(data, aes(x=연료, fill=연료)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="연료별 빈도", x="연료", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p4
grid.arrange(p1, p2, p3, p4, nrow = 2)
p3 <- ggplot(data, aes(x=reorder(변속기, -..count..), fill=변속기)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="변속기별 빈도", x="변속기", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p3
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd",
"#fdcdac", "#1f78b4", "#a9a9a9"")
bright_colors <- c("#ff9999", "#66b3ff", "#99ff99", "#ffcc99", "#a0d8ef",
# 파스텔 톤 색상 팔레트 설정
colors <- c("#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6",
"#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2", "#b3e2cd",
"#fdcdac", "#1f78b4", "#a9a9a9")
p3 <- ggplot(data, aes(x=reorder(변속기, -..count..), fill=변속기)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="변속기별 빈도", x="변속기", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p3
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, x=reorder(색상, -..count..), fill=색상)) +
p2
p2
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
geom_bar(stat="count") +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
p3 <- ggplot(data, aes(x=reorder(변속기, fill=변속기)) +
p3 <- ggplot(data, aes(x=변속기, fill=변속기)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="변속기별 빈도", x="변속기", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p3
p3
# 알록달록하고 이쁜 그래프를 그립니다.
p1 <- ggplot(data, aes(x=브랜드, fill=브랜드)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="브랜드별 빈도", x="브랜드", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p1
# 알록달록하고 이쁜 그래프를 그립니다.
p2 <- ggplot(data, aes(x=색상, fill=색상)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="색상별 빈도", x="색상", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p2
p3 <- ggplot(data, aes(x=변속기, fill=변속기)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="변속기별 빈도", x="변속기", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p3
p4 <- ggplot(data, aes(x=연료, fill=연료)) +
geom_bar() +
scale_fill_manual(values=colors) +
theme_minimal() +
labs(title="연료별 빈도", x="연료", y="빈도수") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, family="nanumgothic"),
text = element_text(family="nanumgothic"),
plot.title = element_text(hjust = 0.5))
p4
grid.arrange(p1, p2, p3, p4, nrow = 2)
